# Copyright 2019 Amazon.com, Inc. and its affiliates. All Rights Reserved.
#
# Licensed under the Amazon Software License (the 'License').
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#   http://aws.amazon.com/asl/
#
# or in the 'license' file accompanying this file. This file is distributed
# on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.


AWSTemplateFormatVersion: "2010-09-09"
Description: "Pipeline Serverless"

Parameters:
  RepositoryName:
    Type:  String
  FullRepositoryId:
    Type: String
  BranchName:
    Type:  String
    Default: "master"
  ServerlessFile:
    Type:  String
    Default: "serverless.yml"
  AwsRegionDeploy:
    Type:  String
    Default: "us-east-1"
  Setup:
    Type: String
    Default: false
  ConnectionArn:
    Type: String
  EnvName:
    Type: String
  AwsRegion:
    Type: String


Conditions: 
  BranchMaster: !Equals [ !Ref BranchName, "master" ]
  BranchDevelop: !Equals [ !Ref BranchName, "develop"]
  Setup: !Equals [ !Ref Setup, true ]


Resources:

  TemplateBucket:
    Type: 'AWS::S3::Bucket'
    Condition: Setup
    Properties:
      BucketName: !Join ['-', [!Ref 'RepositoryName', 'artifacts', !Ref EnvName ]]

  TemplateBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: Setup
    Properties:
      Bucket: !Ref TemplateBucket
      PolicyDocument:
        Statement:
          -
            Action:
                - s3:*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${TemplateBucket}
              - !Sub arn:aws:s3:::${TemplateBucket}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root

  CodePipelineRole:
    Type: AWS::IAM::Role
    Condition: Setup
    Properties:
      RoleName: !Join ['-', [!Ref 'RepositoryName', 'CodePipelineRole', !Ref EnvName ]]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  CodeStarPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: CodeStarPolicyConnection
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'codestar-connections:UseConnection'
            Resource: '*'
      Roles:
        - !Ref CodePipelineRole
  
  CodeBuildRole:
    Type: AWS::IAM::Role
    Condition: Setup
    Properties:
      RoleName: !Join ['-', [!Ref 'RepositoryName', 'CodeBuildRole', !Ref EnvName ]]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'

#----------------------------------------------------------------------#
# Resource CodePipeline
#----------------------------------------------------------------------#
  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Join ['-', [!Ref RepositoryName, !Ref BranchName, !Ref EnvName]]
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Join ['-', [!Ref 'RepositoryName', 'artifacts', !Ref EnvName ]]
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: !Ref BranchName
              OutputArtifacts:
                - Name: Source 
              RunOrder: 1

#----------------------------------------------------------------------#
# Regardless of branch type, the CI Stage will always be created.
#----------------------------------------------------------------------#
        - Name: CI-CD
          Actions:
            - Name: CICD-Action
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: !If [BranchMaster, 'CICDActionDev']
              InputArtifacts:
                - Name: Source 
              Configuration:
                ProjectName: !Join ['-', [ !Ref 'EnvName', !Ref 'RepositoryName', !If [BranchMaster, 'CICDActionDev'] ]]
              RunOrder: 1


#----------------------------------------------------------------------#
# CodeBuild Projects
#----------------------------------------------------------------------#


  CICDActionDev: 
    Condition: BranchDevelop
    Type: AWS::CodeBuild::Project 
    Properties: 
      Name: !Join ['-', [ !Ref 'EnvName', !Ref 'RepositoryName', 'CICDActionDev' ]]
      Source: 
        Type: CODEPIPELINE 
        BuildSpec: '.cicd/buildspec/buildspec_cicd.yml'
      Environment: 
        Type: LINUX_CONTAINER 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:         
          - Name: BranchName 
            Value: !Ref BranchName
          - Name: ServerlessFile 
            Value: !Ref ServerlessFile
          - Name: EnvName
            Value: !Ref EnvName
          - Name: AwsRegionDeploy
            Value: !Ref AwsRegionDeploy
      Artifacts: 
        Type: CODEPIPELINE 
      ServiceRole: !GetAtt CodeBuildRole.Arn
      TimeoutInMinutes: 10